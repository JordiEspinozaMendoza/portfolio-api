version: "3"
services:
  strapi:
    container_name: strapi
    build: .
    image: mystrapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgres
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/home/node/app/config
      - ./src:/home/node/app/src
      - ./package.json:/home/node/package.json
      - ./yarn.lock:/home/node/yarn.lock # Replace with package-lock.json if using npm
      - ./.env:/home/node/app/.env
      - ./public:/home/node/app/public #need this volume to persist uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - postgres
    command: npm run develop

  postgres:
    image: postgres:14.0-alpine
    container_name: postgres
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi-data:


networks:
  strapi:
    name: Strapi
    driver: bridge
